#!/bin/sh
#
# exifrotate - a shell script to rotate pictues (and their exif thumbs)
#
# Copyright (C) 2013 Simon Walz, http://sw.nerdbox.de/
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
#
#
# Based on ideas of the exifautotran script,
# see: http://sylvana.net/jpegcrop/exif_orientation.html
#

trap "rm -f \".tempfile.jpg\" \".tempthumb.jpg\" \".tempthumb_rot.jpg\"" INT QUIT TERM

for i
do
case $i in
-h|--help) 
	echo "exifrotate [files.jpg]"
	echo "a shell script to rotate pictures using their exif orientation flag.\n"
	echo ""
	echo "Example: exifrotate *.jpg"

	exit 0;;
esac

echo $i


EXIFORIENT=`exiftool -Orientation -S -n "${i}" | grep -oE "[0-9]+"`

case "$EXIFORIENT" in
1) transform="";;
2) transform="-flip horizontal";;
3) transform="-rotate 180";;
4) transform="-flip vertical";;
5) transform="-transpose";;
6) transform="-rotate 90";;
7) transform="-transverse";;
8) transform="-rotate 270";;
*) transform="";;
esac

if test -n "$transform"; then
	echo Rotate image with $transform >&2
	jpegtran -copy all $transform "$i" >.tempfile.jpg
	if test $? -ne 0; then
		echo Error while transforming -- skipped. >&2
	else
		# delete the orientation flag:
		exiftool -n -overwrite_original -Orientation=1 .tempfile.jpg

		# extracting the thumbnail image:
		exiftool -b -ThumbnailImage "$i" >.tempthumb.jpg
		if [ -s ".tempthumb.jpg" ]; then
			# rotate the thumbnail image:
			jpegtran -copy all $transform \
					".tempthumb.jpg" >.tempthumb_rot.jpg
			if test $? -ne 0; then
				echo Error while transforming thumb.>&2
			else
				# implant the thumbnail image:
				exiftool -overwrite_original \
					'-ThumbnailImage<=.tempthumb_rot.jpg' \
					.tempfile.jpg
			fi
		else
			echo Error extracting the thumbnail image. >&2
		fi
		# delete thumbs:
		rm .tempthumb.jpg .tempthumb_rot.jpg

		# do a backup
		#mkdir -p _backup
		#mv "$i" _backup/
		
		# delete the orginal file
		rm "$i"

		# replace origingal file
		mv .tempfile.jpg "$i"
	fi
fi
done
